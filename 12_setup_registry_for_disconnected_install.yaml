---
- name: Preparing for disconnected OCP installation
  hosts: bastion
  gather_facts: false 
  become: true
  vars_files:
     - vars/vars.yaml
     - vars/downloads.yaml
     - vars/self_signed_certs.yaml
  vars:
    - username: registry
    - password: sadlkfjsdafj23498jd
  tasks:
    - name: Creating required folder for {{ inventory_hostname }} registry
      file:
        state: directory
        path: "{{ item }}"
      loop:
        - /opt/registry/auth
        - /opt/registry/certs 
        - /opt/registry/data

    - name: Install python-passlib
      package:
        name: python-passlib
        state: present
      
    - name: Generating htpaasswd user and password
      command: htpasswd -bBc /opt/registry/auth/htpasswd {{ username }} {{ password }}

    #- name: Generating htpaasswd user and password
    #  htpasswd:
    #    path: /opt/registry/auth/htpasswd
    #    name: "{{ username }}"
    #    password: "{{ password }}"
    #    crypt_scheme: bcrypt

    - name: Ensuring registry pod is not running
      command: podman rm -f mirror-registry
      failed_when: false

    - name: Setup firewall
      firewalld:
        port: 5000/tcp
        permanent: yes
        state: enabled
    
    - firewalld:
        port: 5000/tcp
        permanent: yes
        state: enabled
        zone: internal

    - service:
        name: firewalld
        state: restarted

    - name: Staring registry pod
      template:
        src: templates/podman_registry.j2
        dest: /tmp/podman.sh
        mode: a+x

    - command: /tmp/podman.sh
      
         
    - name: Testing login to registry
      uri:
        url: https://{{ inventory_hostname }}:5000/v2/_catalog
        method: GET
        user: "{{ username }}"
        password: "{{ password }}"
        force_basic_auth: yes
        return_content: yes
        validate_certs: false
      
    - name: Creating base64 user and pass
      set_fact:
        userPassBase64: "{{ ''.join((username,':',password)) | b64encode }}"

    - set_fact:
        pullJsonSecret: "{{ cluster.pullSecret | from_json }}"

    - set_fact:
        email: "{{ (pullJsonSecret.auths | json_query('*') | list)[0].email }}"

    - set_fact:
        internal_auth: "{{ lookup('template','templates/registry_auth.j2') | to_json }}"
    
    - name:
      debug:
        var:  internal_auth | from_json
    
    - set_fact:
        disconnected_secret: "{{ lookup('template','merge_pull_secret.j2') }}"

    - name: Getting ssh public key
      set_fact:
        sshKey: "{{ lookup('file','~/.ssh/id_rsa.pub') }}"

    - name: Firing up install-config.yaml
      template:
        src: templates/install-config.j2
        dest: "{{ workspace_directory.base_path }}/{{ workspace_directory.config_dir }}/install-config.yaml"
        
    - name: Saving disconnected secret to {{ inventory_hostname }}
      copy:
        content: "{{ disconnected_secret }}"
        dest: "/tmp/disconnected.json"

    - name: Creating shell script for mirroring
      template:
        src: templates/registry_cloner.js
        dest: /tmp/registry_cloner.sh
        mode: +x

    - name: Mirroring the registry
      command: /tmp/registry_cloner.sh
      
        

    
              

